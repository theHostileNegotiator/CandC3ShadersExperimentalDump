//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
// Parameters:
//
//   bool MultiTextureEnable;
//   float4x4 Projection;
//   float TexCoordTransformAngle_0;
//   float Time;
//   float4x4 View;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   View                     c0       4
//   Projection               c4       4
//   MultiTextureEnable       c8       1
//   TexCoordTransformAngle_0 c9       1
//   Time                     c10      1
//
//
// Default values:
//
//   View
//     c0   = { 0, 0, 0, 0 };
//     c1   = { 0, 0, 0, 0 };
//     c2   = { 0, 0, 0, 0 };
//     c3   = { 0, 0, 0, 0 };
//
//   Projection
//     c4   = { 0, 0, 0, 0 };
//     c5   = { 0, 0, 0, 0 };
//     c6   = { 0, 0, 0, 0 };
//     c7   = { 0, 0, 0, 0 };
//
//   MultiTextureEnable
//     c8   = { 1, 0, 0, 0 };
//
//   TexCoordTransformAngle_0
//     c9   = { 1, 0, 0, 0 };
//
//   Time
//     c10  = { 0, 0, 0, 0 };
//

    preshader
    mul r0, c4.x, c0
    mul r2, c4.y, c1
    add r1, r0, r2
    mul r2, c4.z, c2
    add r0, r1, r2
    mul r1, c4.w, c3
    add c0, r0, r1
    mul r0, c5.x, c0
    mul r2, c5.y, c1
    add r1, r0, r2
    mul r2, c5.z, c2
    add r0, r1, r2
    mul r1, c5.w, c3
    add c1, r0, r1
    mul r0, c6.x, c0
    mul r2, c6.y, c1
    add r1, r0, r2
    mul r2, c6.z, c2
    add r0, r1, r2
    mul r1, c6.w, c3
    add c2, r0, r1
    mul r0, c7.x, c0
    mul r2, c7.y, c1
    add r1, r0, r2
    mul r2, c7.z, c2
    add r0, r1, r2
    mul r1, c7.w, c3
    add c3, r0, r1
    add r0.w, c8.x, (-1)
    mul r1.w, r0.w, r0.w
    neg r0.w, r1.w
    ge c7.x, r0.w, r1.w
    mul r0.w, c9.x, c10.x
    mul r1.w, r0.w, (0.159154939)
    add r0.xy, r1.w, (0.25, 0.5)
    frc r1.xy, r0.xy
    mul r0.xy, (6.28318548, 6.28318548), r1.xy
    add r1.xy, (-3.14159274, -3.14159274), r0.xy
    mul r0.xy, r1.xy, r1.xy
    mul r1.xy, (-2.52398518e-007, -2.52398518e-007), r0.xy
    add r2.xy, (2.47609e-005, 2.47609e-005), r1.xy
    mul r1.xy, r0.xy, r2.xy
    add r2.xy, (-0.0013888397, -0.0013888397), r1.xy
    mul r1.xy, r0.xy, r2.xy
    add r2.xy, (0.0416666418, 0.0416666418), r1.xy
    mul r1.xy, r0.xy, r2.xy
    add r2.xy, (-0.499999996, -0.499999996), r1.xy
    mul r1.xy, r0.xy, r2.xy
    add r0.xy, (1, 1), r1.xy
    mov c4.x, r0.x
    mov c5.x, r0.y

// approximately 51 instructions used
//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
// Parameters:
//
//   float3 ColorEmissive;
//   
//   struct
//   {
//       float IsEnabled;
//       float4 Color;
//       float RangeStart;
//       float OneOverRangeDelta;
//
//   } Fog;
//   
//   struct
//   {
//       float4 ScaleUV_OffsetUV;
//
//   } Shroud;
//   
//   float TexCoordTransformU_0;
//   float TexCoordTransformU_1;
//   float TexCoordTransformU_2;
//   float TexCoordTransformV_0;
//   float TexCoordTransformV_1;
//   float TexCoordTransformV_2;
//   float4x3 ViewI;
//   float4x3 World;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   Fog                  c8       4
//   World                c12      3
//   ViewI                c15      3
//   ColorEmissive        c18      1
//   TexCoordTransformU_0 c19      1
//   TexCoordTransformV_0 c20      1
//   TexCoordTransformU_1 c21      1
//   TexCoordTransformV_1 c22      1
//   TexCoordTransformU_2 c23      1
//   TexCoordTransformV_2 c24      1
//   Shroud               c25      1
//
//
// Default values:
//
//   Fog
//     c8   = { 0, 0, 0, 0 };
//     c9   = { 1, 1, 1, 1 };
//     c10  = { 0, 0, 0, 0 };
//     c11  = { 0.001, 0, 0, 0 };
//
//   World
//     c12  = { 0, 0, 0, 0 };
//     c13  = { 0, 0, 0, 0 };
//     c14  = { 0, 0, 0, 0 };
//
//   ViewI
//     c15  = { 0, 0, 0, 0 };
//     c16  = { 0, 0, 0, 0 };
//     c17  = { 0, 0, 0, 0 };
//
//   ColorEmissive
//     c18  = { 1, 1, 1, 0 };
//
//   TexCoordTransformU_0
//     c19  = { 0.5, 0, 0, 0 };
//
//   TexCoordTransformV_0
//     c20  = { 0.5, 0, 0, 0 };
//
//   TexCoordTransformU_1
//     c21  = { 0.5, 0, 0, 0 };
//
//   TexCoordTransformV_1
//     c22  = { 0.5, 0, 0, 0 };
//
//   TexCoordTransformU_2
//     c23  = { 0.5, 0, 0, 0 };
//
//   TexCoordTransformV_2
//     c24  = { 0.5, 0, 0, 0 };
//
//   Shroud
//     c25  = { 1, 1, 0, 0 };
//

    vs_1_1
    def c26, 0.5, 1.5, 2.5, 0
    def c27, 1, 0, 100, 0
    dcl_position v0
    dcl_color v1
    dcl_texcoord v2
    mad r1, v0.xyzx, c27.xxxy, c27.yyyx
    mov r0.w, c27.x
    dp4 r0.z, r1, c14
    dp4 r0.x, r1, c12
    dp4 r0.y, r1, c13
    dp4 oPos.x, r0, c0
    dp4 oPos.y, r0, c1
    dp4 oPos.z, r0, c2
    mov r1.x, c15.w
    mov r1.y, c16.w
    mov r1.z, c17.w
    dp4 oPos.w, r0, c3
    add r1.xyz, r0, -r1
    mul oD0.xyz, v1, c18
    dp3 r1.x, r1, r1
    add r0.xy, r0, c25.zwzw
    rsq r0.w, r1.x
    mul oT2.xy, r0, c25
    rcp r0.w, r0.w
    mov r2.x, c21.x
    mov r2.y, c22.x
    add r0.w, r0.w, -c10.x
    add r5.xy, -r2, v2
    mul r0.w, r0.w, c11.x
    mul r0.xy, r5, c5.x
    max r3.w, r0.w, c27.y
    mad r0.z, r5.y, -c4.x, r0.x
    mad r0.w, r5.x, c4.x, r0.y
    mad r1.y, r5.x, -c4.x, r0.y
    mov r3.x, c23.x
    mov r3.y, c24.x
    add r1.zw, r2.xyxy, r0
    add r0.xy, -r3, v2
    mul r0.w, r5.y, c4.x
    mul r4.xy, r0, c5.x
    mad r1.x, r5.x, c5.x, r0.w
    mad r0.z, r0.y, -c4.x, r4.x
    mad r0.w, r0.x, c4.x, r4.y
    mul r2.w, r0.y, c4.x
    mad r0.y, r0.x, -c4.x, r4.y
    mad r0.x, r0.x, c5.x, r2.w
    add r0.zw, r3.xyxy, r0
    add r0.xy, r3, r0
    add r1.xy, r2, r1
    add r0.zw, r0, -r0.xyxy
    add r1.zw, r1, -r1.xyxy
    mad r0.zw, c7.x, r0, r0.xyxy
    mad r1.zw, c7.x, r1, r1.xyxy
    add r0, r0, -v2.xyxy
    mov r4.z, c19.x
    mov r4.w, c20.x
    mul r2.w, v1.w, c27.z
    add r4.xy, -r4.zwzw, v2
    slt r3.xyz, r2.w, c26
    mul r5.xy, r4, c5.x
    mad r2, r3.z, r0, v2.xyxy
    mad r0.z, r4.y, -c4.x, r5.x
    mad r0.w, r4.x, c4.x, r5.y
    mul r5.w, r4.y, c4.x
    mad r0.y, r4.x, -c4.x, r5.y
    mad r0.x, r4.x, c5.x, r5.w
    add r0.zw, r4, r0
    add r0.xy, r4.zwzw, r0
    add r1, r1, -r2
    add r0.zw, r0, -r0.xyxy
    mad r1, r3.y, r1, r2
    mad r0.zw, c7.x, r0, r0.xyxy
    min r2.w, r3.w, c27.x
    add r0, r0, -r1
    mov r3.w, c27.x
    mad oD1.x, c8.x, -r2.w, r3.w
    mad r0, r3.x, r0, r1
    mov oT0.xy, r0
    mov oT1.xy, r0.zwzw

// approximately 74 instruction slots used

